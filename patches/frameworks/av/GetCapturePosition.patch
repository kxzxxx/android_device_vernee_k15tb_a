From 1e11edfe6fb5335665f46d1def292b9ca977bc52 Mon Sep 17 00:00:00 2001
From: DeckerSU <support@decker.su>
Date: Sat, 18 Feb 2017 23:46:58 +0300
Subject: Disable usage of get_capture_position

---

 services/audioflinger/Threads.cpp | 17 -----------------
 1 file changed, 0 insertions(+), 17 deletions(-)

#---------------------------------------------------------------------------------------------------

diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index 08ccc8e..e3599a3 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -6463,21 +6463,4 @@
         mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_SERVER] = systemTime();
 
-        // Update server timestamp with kernel stats
-        if (mInput->stream->get_capture_position != nullptr
-                && mPipeSource.get() == nullptr /* don't obtain for FastCapture, could block */) {
-            int64_t position, time;
-            int ret = mInput->stream->get_capture_position(mInput->stream, &position, &time);
-            if (ret == NO_ERROR) {
-                mTimestamp.mPosition[ExtendedTimestamp::LOCATION_KERNEL] = position;
-                mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_KERNEL] = time;
-                // Note: In general record buffers should tend to be empty in
-                // a properly running pipeline.
-                //
-                // Also, it is not advantageous to call get_presentation_position during the read
-                // as the read obtains a lock, preventing the timestamp call from executing.
-            }
-        }
-        // Use this to track timestamp information
-        // ALOGD("%s", mTimestamp.toString().c_str());
 
         if (framesRead < 0 || (framesRead == 0 && mPipeSource == 0)) {

